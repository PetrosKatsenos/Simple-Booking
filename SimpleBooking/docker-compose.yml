version: "3.4"

networks:

   frontend:
   backend:



services:

   webmvcclient:
      build:
         context: .\WebMvcClient
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Development
         OrderUrl: http://order
      container_name: webshop
      ports:
         - "5200:80"
      networks:
         - frontend
      depends_on:
         - order
#         - tokenserver

   order:
      build:
         context: .\OrderProcessorAPI
         dockerfile: Dockerfile
      image: orderapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: OrderDb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: orderprocessorapi1
      ports:
         - "5000:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
#         - tokenserver

   cart:
      image: cartimage
      build: 
         context: .\CartAPI
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
      container_name: cartapi
      ports:
         - "5050:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - cartapi.data

   mssqlserver:
      image: "microsoft/mssql-server-linux:latest"
      ports:
         - "1445:1433"
      container_name: mssqlcontainer
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend

   cartapi.data:
      image: redis
      ports:
         - "6377:6379"
      networks:
         - backend 