version: "3.4"

networks:

   frontend:
   backend:



services:

   webmvcclient:
      build:
         context: .\WebMvcClient
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Development
         OrderUrl: http://order
         TicketsCartUrl: http://TicketsCart
         EventManagementUrl: http://eventcatalog
         IdentityUrl: http://10.0.75.1:5000
         EventsSearchUrl: http://eventcatalog
         ImageUrl: http://localhost:5030
         CartUrl: http://cart
      container_name: webshop
      ports:
         - "5900:80"
      networks:
         - frontend
      depends_on:
         - order
         - eventcatalog
         - cart
         - tokenserver

   order:
      build:
         context: .\OrderProcessorAPI
         dockerfile: Dockerfile
      image: orderapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: OrderDb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: orderprocessorapi1
      ports:
         - "8000:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
         - tokenserver

   cart:
      image: cartimage
      build: 
         context: .\CartAPI
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
      container_name: cartapi
      ports:
         - "5050:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - cartapi.data

   eventcatalog:
      image: eventcatalogimage
      build: 
         context: .\EventCatalogAPI
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development
         DatabaseServer: mssqlserver
         DatabaseName: EventCatalogDb1
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: eventcatalogapi
      ports:
         - "5030:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver

   mssqlserver:
      image: "microsoft/mssql-server-linux:latest"
      ports:
         - "1445:1433"
      container_name: mssqlcontainer
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend

   cartapi.data:
      image: redis
      ports:
         - "6377:6379"
      networks:
         - backend 

          
   tokenserver:
      build: 
         context: .\TokenServiceApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5900
         BasketApiClient: http://localhost:5050
         OrderApiClient: http://localhost:8000
      container_name: tokenserviceapi
      ports:
         - "5000:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver