@model WebMvcClient.Models.OrderViewModel

@{
    ViewData["Title"] = "Order";
}

<style>
    body {
        background-color: #F05F40;
        background-image: url('../img/header3.jpg');
    }

    .transparentbar, .transparentbar:hover {
        background-repeat: no-repeat;
        cursor: pointer;
        outline: none;
        border: none;
        box-shadow: none;
        background-image: none;
        background-color: transparent;
        background: transparent;
        border-color: transparent;
    }
</style>

<div class="container-fluid" style="padding-top: 72px; padding-bottom: 72px;">
    <div class="row">
        <div class="col-lg-4 col-lg-offset-4" style="font-family: 'Open Sans', 'Helvetica Neue', Arial, sans-serif;">
            <form asp-controller="Order" asp-action="Index" method="post" id="payment-form" class="panel panel-primary" style="background-color: rgba(0, 0, 0, 0.7); border: none; padding: 12px; margin: 12px;">
                <section style="color: white;">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(err => err.Errors))
                        {
                            <div class="alert alert-warning" role="alert">
                                &nbsp;@error.ErrorMessage
                            </div>
                        }
                    </div>

                    <div class="form-group">
                        <span style="font-weight:bold;">Event: </span>
                        @Html.HiddenFor(model => model.EventName)
                        @Html.DisplayFor(model => model.EventName)
                    </div>
                    <div class="form-group">
                        <span style="font-weight:bold;">Date: </span>
                        @Html.HiddenFor(model => model.EventDate)
                        @Html.DisplayFor(model => model.EventDate)
                    </div>
                    <div class="form-group">
                        <span style="font-weight:bold;">Location: </span>
                        @Html.HiddenFor(model => model.Location)
                        @Html.DisplayFor(model => model.Location)
                    </div>
                    <div class="form-group">
                        <span style="font-weight:bold;">Quantity: </span>
                        @Html.HiddenFor(model => model.Quantity)
                        @Html.DisplayFor(model => model.Quantity)
                    </div>
                    <div class="form-group">
                        <span style="font-weight:bold;">Per Ticket: </span>
                        @Html.HiddenFor(model => model.Price)
                        @Html.DisplayFor(model => model.Price)
                    </div>
                    <div class="form-group">
                        <span style="font-weight:bold;">Total: </span>
                        @Html.HiddenFor(model => model.TotalAmount)
                        @Html.DisplayFor(model => model.TotalAmount)
                    </div>

                    <div class="form-group">
                        <label asp-for="UserName" class="control-label"></label>
                        <input asp-for="UserName" class="form-control" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="BillingAddress" class="control-label"></label>
                        <input asp-for="BillingAddress" class="form-control" />
                        <span asp-validation-for="BillingAddress" class="text-danger"></span>
                    </div>
                </section>

                <section>
                    <div class="form-group">
                        <div id="payment-form-container" class="well col-lg-12" style="">
                            <div class="form-group">
                                <label class="control-label">Accepted</label>
                                <div class="row">
                                    <div class="col-md-10 card-images">
                                        <img src="~/images/creditcards/visa.png" alt="visa" />
                                        <img src="~/images/creditcards/mastercard.png" alt="mastercard" />
                                        <img src="~/images/creditcards/amex.png" alt="amex" />
                                        <img src="~/images/creditcards/discover.png" alt="discover" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="card-element">Credit or debit card</label>
                                <div id="card-element" class="field">
                                    <!-- a stripe Element will be inserted here. --->
                                </div>
                            </div>
                            <div id="card-errors" role="alert"></div>
                            <h3 class="validation"></h3>
                            <p class="alert alert-danger payment-errors" style="display:none; "></p>
                        </div>
                    </div>
                </section>

                <section>
                    @*<div class="form-group">
                        <input id="pay-button" type="submit" value="Place Order" name="action" class="btn esh-orders_new-placeOrder" />
                    </div>*@
                    <div class="center-block form-group text-center">
                        <button type="submit" id="pay-button" name="action" value="Place Order" class="btn btn-outline-primary" style="font-size: 48px; font-family: 'Permanent Marker', cursive; background: transparent; background-color: transparent; color: white;">Purchase</button>
                    </div>
                </section>
            </form>
        </div>
    </div>

    <div class="text-center row" style="font-family: 'Open Sans', 'Helvetica Neue', Arial, sans-serif;">
        <form asp-controller="Catalog" asp-action="Index">
            <button class="btn btn-outline-primary btn-xl transparentbar center-block" style="font-size: 12px; font-family: 'Open Sans', 'Helvetica Neue', Arial, sans-serif; color: white;">RETURN</button>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://js.stripe.com/v3/"></script>
    <script type="text/javascript">

        jQuery(function ($) {
            var stripe = Stripe('@ViewBag.StripePublishableKey');
            var elements = stripe.elements();
            var card = elements.create('card', {
                iconStyle: 'solid',
                style: {
                    base: {
                        iconColor: '#8898AA',
                        color: 'blue',
                        lineHeight: '36px',
                        fontWeight: 300,
                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                        fontSize: '16px',
                        '::placeholder': {
                            color: '#8898AA',
                        },
                    },
                    invalid: {
                        iconColor: '#e85746',
                        color: '#e85746',
                    }
                },
                classes: {
                    focus: 'is-focused',
                    empty: 'is-empty',
                },
            });
            card.mount('#card-element');

            function stripeTokenHandler(token) {
                var  form = document.getElementById('payment-form');
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', token.id);
                form.appendChild(hiddenInput);
                form.submit();
            }

            function createToken() {
                stripe.createToken(card).then(function (result) {
                    if (result.error) {
                        var errorElement = document.getElementById('card-errors');
                        errorElement.textContent = result.error.message;
                    }
                    else {
                        stripeTokenHandler(result.token);
                    }
                });
            };
            var form = document.getElementById('payment-form');
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                createToken();
            });
            card.addEventListener('change', function (event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                }
                else {
                    displayError.textContent = ' ';
                }
            });
        });
    </script>
}