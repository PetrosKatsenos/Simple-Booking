@model WebMvcClient.Models.OrderViewModel

@{
    ViewData["Title"] = "Order";
}

<h2>Order Summary</h2>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Order" asp-action="Index" method="post" id="payment-form">
            <section class="esh-orders_new-section">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="row">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(err => err.Errors))
                    {
                        <div class="alert alert-warning" role="alert">
                            &nbsp;@error.ErrorMessage
                        </div>
                    }
                </div>

                <div class="form-group">
                    @*<label asp-for="EventName" class="control-label"></label>*@
                    @Html.DisplayNameFor(model => model.EventName)
                    @Html.HiddenFor(model => model.EventName)
                    @Html.DisplayFor(model => model.EventName)
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.EventDate)
                    @Html.HiddenFor(model => model.EventDate)
                    @Html.DisplayFor(model => model.EventDate)
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Location)
                    @Html.HiddenFor(model => model.Location)
                    @Html.DisplayFor(model => model.Location)
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Price)
                    @Html.HiddenFor(model => model.Price)
                    @Html.DisplayFor(model => model.Price)
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Quantity)
                    @Html.HiddenFor(model => model.Quantity)
                    @Html.DisplayFor(model => model.Quantity)
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.TotalAmount)
                    @Html.HiddenFor(model => model.TotalAmount)
                    @Html.DisplayFor(model => model.TotalAmount)
                </div>

                <hr style="height:5px;border:none;color:#333;background-color:#333;" />
                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="BillingAddress" class="control-label"></label>
                    <input asp-for="BillingAddress" class="form-control" />
                    <span asp-validation-for="BillingAddress" class="text-danger"></span>
                </div>
            </section>

            <section class="esh-orders_new-section esh-orders_new-section--right">
                <div class="form-group">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-8">
                        <div id="payment-form-container" class="col-md-8 well" style="width:480px;margin:20px auto;">
                            <div class="form-group">
                                <label class="control-label">Accepted</label>
                                <div class="row">
                                    <div class="col-md-10 card-images">
                                        <img src="~/images/creditcards/visa.png" alt="visa" />
                                        <img src="~/images/creditcards/mastercard.png" alt="mastercard" />
                                        <img src="~/images/creditcards/amex.png" alt="amex" />
                                        <img src="~/images/creditcards/discover.png" alt="discover" />
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="card-element">Credit or debit card</label>
                                <div id="card-element" class="field">

                                    <!-- a stripe Element will be inserted here. --->
                                </div>

                            </div>

                            <div id="card-errors" role="alert"></div>

                            <h3 class="validation"></h3>
                            <p class="alert alert-danger payment-errors" style="display:none; "></p>

                        </div>
                    </div>
                </div>
            </section>

            <section class="esh-orders_new-section">
                <div class="form-group">
                    <div class="col-md-9">
                        <input asp-for="@Model.TotalAmount" name="TotalAmount" type="hidden" />
                    </div>
                    <div class="col-md-2">
                        <input id="pay-button" type="submit" value="[ Pay And Place Order ]" name="action" class="btn esh-orders_new-placeOrder" />
                    </div>
                </div>
            </section>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://js.stripe.com/v3/"></script>


    <script type="text/javascript">

        jQuery(function ($) {

             var stripe = Stripe('@ViewBag.StripePublishableKey');

            var elements = stripe.elements();
            var card = elements.create('card', {
                iconStyle: 'solid',
                style: {
                    base: {
                        iconColor: '#8898AA',
                        color: 'blue',
                        lineHeight: '36px',
                        fontWeight: 300,
                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                        fontSize: '16px',

                        '::placeholder': {
                            color: '#8898AA',
                        },
                    },
                    invalid: {
                        iconColor: '#e85746',
                        color: '#e85746',
                    }
                },
                classes: {
                    focus: 'is-focused',
                    empty: 'is-empty',
                },
            });
            card.mount('#card-element');



            function stripeTokenHandler(token) {
                var  form = document.getElementById('payment-form');
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', token.id);
                form.appendChild(hiddenInput);
                form.submit();
            }

            function createToken() {
                stripe.createToken(card).then(function (result) {
                    if (result.error) {
                        var errorElement = document.getElementById('card-errors');
                        errorElement.textContent = result.error.message;

                    }
                    else {
                        stripeTokenHandler(result.token);

                    }

                });

            };
            var form = document.getElementById('payment-form');
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                createToken();
            });
            card.addEventListener('change', function (event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;


                }
                else {
                    displayError.textContent = ' ';

                }

            });

        });


    </script>
}